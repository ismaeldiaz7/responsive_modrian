body {
	width: 100%;
	height: 100%;
	margin: 0;
	display: flex;
	background-color: #800000;
}


.wide-col {
	height: 100%;
	width:65%;
	display: flex;
}

.narrow-col {
	height: 100%;
	width: 50%;
}

.box {
	height: calc(100%/2);
	width: 100%;
	display: flex;
}

@media only screen and (max-width: 1050px) {
	body{
		display: block;
		background-color: #0F14C8;
	}
	.wide-col {
	height: 50%;
	width:100%;
	display: flex;
}

	.narrow-col {
	height: 50%;
	width: 100%;
	display: flex;
}

	.box{
	height: 100%;
	width: 50%;
	display: flex;
	}

}

/*For the two media's, I decided to change the background 
and keep the theme of the project and added the boogie image */

@media only screen and (max-width: 600px) {
	body{
		display: block;
		background-color: #4B0082;
	}
	
	.wide-col {
	height: 50%;
	width:100%;
	display: flex;
	margin: 0;
	}

	.narrow-col {
	height: 50%;
	width: 100%;
	display: block;
	margin: 0;
	}

	.box{
	height: 100%;
	width: 100%;
	display: flex;
	}

}


.blue {background-color: #0D11A8;}
.red {background-color: #F50F0F;}
.yellow {background-color: #FAE317;}


/* https://philipwalton.github.io/solved-by-flexbox/demos/vertical-centering/ */
/* If you're using 'display: flex' this class can be used to easily center horizontally! */
.center-horizontal {
	align-items: center;	
}

/* If you're using 'display: flex' this class can be used to easily center vertically! */
.center-vertical {
	justify-content: center;
}

/* Keep your image from overflowing it's parent DIV */
.contain-image {
	max-height: 75%;
	max-width: 75%;
}